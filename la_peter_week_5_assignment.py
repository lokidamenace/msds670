# -*- coding: utf-8 -*-
"""La_Peter_Week_5_Assignment.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15o9TuOQqnqDbmjYU0-BbGHEryyhJ1hoO

# Week 5 Assignment
Date: March 10, 2025

Author: Peter La
"""

from google.colab import drive
drive.mount('/content/drive')

"""##### Import Libraries"""

# Commented out IPython magic to ensure Python compatibility.
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
import seaborn as sns
import os

# %matplotlib inline
dpi = 300
sns.set()

"""##### Import Dataset"""

df = pd.read_csv(r'/content/drive/MyDrive/msds670/customer_support.csv')
df.sample(10)

#Create directories
path = '/content/drive/MyDrive/msds670/'

"""##### Plot 1"""

# Group average call rating by time window
avg_rating_by_time = df.groupby('time_window')['call_rating'].mean().sort_index()

# Plot 1
fig, ax = plt.subplots(figsize=(10,5))

ax.plot(avg_rating_by_time.index, avg_rating_by_time.values, marker='o', linestyle='-')
ax.set_title('Trend of Call Ratings Across Different Time Windows')
ax.set_xlabel('Time Window')
ax.set_ylabel('Average Call Rating')

plt.tight_layout()

plot1_filename = 'avgratebytime.png'
fig.savefig(path + plot1_filename, dpi=dpi)

# Group average wait time by time window
avg_wait_by_time_window = df.groupby('time_window')[['during_call_wait_time', 'incoming_call_wait_time']].mean().sort_index()

# Plot 2
fig, ax = plt.subplots(figsize=(10,5))

x_pos = np.arange(len(avg_wait_by_time_window.index))

width = 0.4

ax.bar(x_pos - width/2, avg_wait_by_time_window['during_call_wait_time'], width, label='During Call Wait Time')
ax.bar(x_pos + width/2, avg_wait_by_time_window['incoming_call_wait_time'], width, label='Incoming Call Wait Time')
ax.set_xticks(x_pos)
ax.set_xticklabels(avg_wait_by_time_window.index, rotation=45)
ax.set_title('Average Wait Time by Time Window')
ax.set_xlabel('Time Window')
ax.set_ylabel('Average Wait Time (minutes)')
ax.legend()

plt.tight_layout()

plot2_filename = 'avgwaitbytimewindow.png'
fig.savefig(path + plot2_filename, dpi=dpi)

# Count of calls by time window to identify peak hours
call_volume_by_time_window = df['time_window'].value_counts().sort_index()

# Plot 3

fig, ax = plt.subplots(figsize=(10, 5))

x = call_volume_by_time_window.index  # Time windows
y = call_volume_by_time_window.values # Call volumes

ax.bar(x, y)
ax.set_xlabel('Time Window')
ax.set_ylabel('Number of Calls')
ax.set_title('Call Volume by Time Window')
ax.set_xticklabels(x, rotation=45)

plt.tight_layout()

plot3_filename = 'callsbytimewindow.png'
fig.savefig(path + plot3_filename, dpi=dpi)

# Merging call volume data with average wait times
time_window_analysis = df.groupby('time_window').agg(
    call_count=('call_purpose', 'count'),
    avg_during_call_wait=('during_call_wait_time', 'mean'),
    avg_incoming_wait=('incoming_call_wait_time', 'mean')
).sort_index()

# Plot 4
fig, ax1 = plt.subplots(figsize=(10, 5))

color1 = 'steelblue'
color2 = 'orange'

ax1.set_xlabel('Time Window')
ax1.set_ylabel('Call Volume')
ax1.bar(time_window_analysis.index, time_window_analysis['call_count'], color=color1, alpha=0.7, label='Call Volume')

ax2 = ax1.twinx()
ax2.set_ylabel('Average Wait Time (minutes)', color=color2)
ax2.plot(time_window_analysis.index, time_window_analysis['avg_during_call_wait'],
         color=color2, marker='o', linestyle='-', label='During Call Wait Time')

fig.suptitle('Correlation Between Call Volume and Wait Times by Time Window')
ax1.legend(loc='upper left')
ax2.legend(loc='upper right')

plt.tight_layout()

plot4_filename = 'correlation.png'
fig.savefig(path + plot4_filename, dpi=dpi)



